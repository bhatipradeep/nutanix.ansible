- debug:
    msg: start testing ntnx_foundation_central_api_keys module

- name: Generate random alias for api key
  set_fact:
    random_alias: "{{query('community.general.random_string',numbers=false, special=false,length=12)}}"

- name: create api key with random alias
  ntnx_foundation_central_api_keys:
    alias:  "{{random_alias.0}}"
  register: key
  ignore_errors: true

- name: Creation Status
  assert:
    that:
      - key.response is defined
      - key.failed==false
      - key.changed==true
      - key.response.key_uuid is defined
    fail_msg: "fail: Unable to create api key "
    success_msg: "succes: api key created successfully "
- debug:
    var: key

- name: get api key with key_uuid
  ntnx_foundation_central_api_keys_info:
    key_uuid: "{{key.response.key_uuid}}"
    # length: 1
    # offset: 3
    #alias: "An-v1-1.3"
    # custom_filter:
    #   alias: "test-fc"
    # # key_uuid: "5afdbeb4-f191-49fc-7e00-a70328f70024" 
  register: result
  ignore_errors: true

- name: Creation Status
  assert:
    that:
      - result.response is defined
      - result.response.alias=="{{random_alias.0}}"
    fail_msg: "fail: Unable to get api key with key_uuid"
    success_msg: "succes: get api key with key_uuid "

- name: get api key with key_uuid
  ntnx_foundation_central_api_keys_info:
    alias: "{{random_alias.0}}"
  register: result
  ignore_errors: true

# - debug:
#     var: result.response.0.alias

# - name: Creation Status
#   assert:
#     that:
#       - result.response is defined
#       - result.response.0.alias=="{{random_alias.0}}"
#     fail_msg: "fail: Unable to get api key with key_uuid"
#     success_msg: "succes: get api key with key_uuid "
# - debug:
#     var: result
    